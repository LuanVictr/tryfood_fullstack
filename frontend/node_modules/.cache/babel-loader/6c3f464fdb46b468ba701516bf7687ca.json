{"ast":null,"code":"var _jsxFileName = \"/app_frontend/src/pages/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport Logo from '../images/tryfood.png';\nimport '../styles/login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isDisabled, setDisabled] = useState(true);\n  const history = useHistory();\n  const minPassword = 5;\n\n  const submitLogin = () => {\n    const userObj = {\n      email\n    };\n    const userObjJSON = JSON.stringify(userObj);\n    localStorage.setItem('user', userObjJSON);\n    localStorage.setItem('mealsToken', 1);\n    localStorage.setItem('cocktailsToken', 1);\n    history.push('/foods');\n  };\n\n  const validateButton = () => {\n    if (email.includes('@') && email.length > 0 && email.includes('.') && password.length > minPassword) {\n      setDisabled(false);\n    } else {\n      setDisabled(true);\n    }\n  };\n\n  const handleChange = _ref => {\n    let {\n      target\n    } = _ref;\n\n    if (target.name === 'Email') {\n      setEmail(target.value);\n      validateButton();\n    } else {\n      setPassword(target.value);\n      validateButton();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"logo\",\n      src: Logo,\n      alt: \"logoImage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"login-input\",\n          name: \"Email\",\n          \"data-testid\": \"email-input\",\n          type: \"email\",\n          placeholder: \"Insira seu email\",\n          value: email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"login-input\",\n          name: \"Password\",\n          \"data-testid\": \"password-input\",\n          type: \"password\",\n          placeholder: \"Insira sua senha\",\n          value: password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"login-button\",\n          type: \"button\",\n          \"data-testid\": \"login-submit-btn\",\n          onClick: submitLogin,\n          disabled: isDisabled,\n          children: \"Enter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"xwyQxc5daRn8M53Ns2xD1dhEU7s=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useHistory","Logo","Login","email","setEmail","password","setPassword","isDisabled","setDisabled","history","minPassword","submitLogin","userObj","userObjJSON","JSON","stringify","localStorage","setItem","push","validateButton","includes","length","handleChange","target","name","value"],"sources":["/app_frontend/src/pages/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport Logo from '../images/tryfood.png';\nimport '../styles/login.css';\n\nfunction Login() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isDisabled, setDisabled] = useState(true);\n  const history = useHistory();\n  const minPassword = 5;\n\n  const submitLogin = () => {\n    const userObj = { email };\n    const userObjJSON = JSON.stringify(userObj);\n    localStorage.setItem('user', userObjJSON);\n    localStorage.setItem('mealsToken', 1);\n    localStorage.setItem('cocktailsToken', 1);\n    history.push('/foods');\n  };\n\n  const validateButton = () => {\n    if (\n      email.includes('@')\n      && email.length > 0\n      && email.includes('.')\n      && password.length > minPassword) {\n      setDisabled(false);\n    } else {\n      setDisabled(true);\n    }\n  };\n\n  const handleChange = ({ target }) => {\n    if (target.name === 'Email') {\n      setEmail(target.value);\n      validateButton();\n    } else {\n      setPassword(target.value);\n      validateButton();\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <img className=\"logo\" src={ Logo } alt=\"logoImage\" />\n      <div className=\"content\">\n        <form>\n          <input\n            className=\"login-input\"\n            name=\"Email\"\n            data-testid=\"email-input\"\n            type=\"email\"\n            placeholder=\"Insira seu email\"\n            value={ email }\n            onChange={ handleChange }\n          />\n          <input\n            className=\"login-input\"\n            name=\"Password\"\n            data-testid=\"password-input\"\n            type=\"password\"\n            placeholder=\"Insira sua senha\"\n            value={ password }\n            onChange={ handleChange }\n          />\n          <button\n            className=\"login-button\"\n            type=\"button\"\n            data-testid=\"login-submit-btn\"\n            onClick={ submitLogin }\n            disabled={ isDisabled }\n          >\n            Enter\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAO,qBAAP;;;AAEA,SAASC,KAAT,GAAiB;EAAA;;EACf,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACQ,UAAD,EAAaC,WAAb,IAA4BT,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAMU,OAAO,GAAGT,UAAU,EAA1B;EACA,MAAMU,WAAW,GAAG,CAApB;;EAEA,MAAMC,WAAW,GAAG,MAAM;IACxB,MAAMC,OAAO,GAAG;MAAET;IAAF,CAAhB;IACA,MAAMU,WAAW,GAAGC,IAAI,CAACC,SAAL,CAAeH,OAAf,CAApB;IACAI,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BJ,WAA7B;IACAG,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmC,CAAnC;IACAD,YAAY,CAACC,OAAb,CAAqB,gBAArB,EAAuC,CAAvC;IACAR,OAAO,CAACS,IAAR,CAAa,QAAb;EACD,CAPD;;EASA,MAAMC,cAAc,GAAG,MAAM;IAC3B,IACEhB,KAAK,CAACiB,QAAN,CAAe,GAAf,KACGjB,KAAK,CAACkB,MAAN,GAAe,CADlB,IAEGlB,KAAK,CAACiB,QAAN,CAAe,GAAf,CAFH,IAGGf,QAAQ,CAACgB,MAAT,GAAkBX,WAJvB,EAIoC;MAClCF,WAAW,CAAC,KAAD,CAAX;IACD,CAND,MAMO;MACLA,WAAW,CAAC,IAAD,CAAX;IACD;EACF,CAVD;;EAYA,MAAMc,YAAY,GAAG,QAAgB;IAAA,IAAf;MAAEC;IAAF,CAAe;;IACnC,IAAIA,MAAM,CAACC,IAAP,KAAgB,OAApB,EAA6B;MAC3BpB,QAAQ,CAACmB,MAAM,CAACE,KAAR,CAAR;MACAN,cAAc;IACf,CAHD,MAGO;MACLb,WAAW,CAACiB,MAAM,CAACE,KAAR,CAAX;MACAN,cAAc;IACf;EACF,CARD;;EAUA,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,wBACE;MAAK,SAAS,EAAC,MAAf;MAAsB,GAAG,EAAGlB,IAA5B;MAAmC,GAAG,EAAC;IAAvC;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,SAAf;MAAA,uBACE;QAAA,wBACE;UACE,SAAS,EAAC,aADZ;UAEE,IAAI,EAAC,OAFP;UAGE,eAAY,aAHd;UAIE,IAAI,EAAC,OAJP;UAKE,WAAW,EAAC,kBALd;UAME,KAAK,EAAGE,KANV;UAOE,QAAQ,EAAGmB;QAPb;UAAA;UAAA;UAAA;QAAA,QADF,eAUE;UACE,SAAS,EAAC,aADZ;UAEE,IAAI,EAAC,UAFP;UAGE,eAAY,gBAHd;UAIE,IAAI,EAAC,UAJP;UAKE,WAAW,EAAC,kBALd;UAME,KAAK,EAAGjB,QANV;UAOE,QAAQ,EAAGiB;QAPb;UAAA;UAAA;UAAA;QAAA,QAVF,eAmBE;UACE,SAAS,EAAC,cADZ;UAEE,IAAI,EAAC,QAFP;UAGE,eAAY,kBAHd;UAIE,OAAO,EAAGX,WAJZ;UAKE,QAAQ,EAAGJ,UALb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAnBF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAoCD;;GA1EQL,K;UAISF,U;;;KAJTE,K;AA4ET,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}