{"ast":null,"code":"var _jsxFileName = \"/home/luan/Trybe/projetos/front-end/sd-022-a-project-recipes-app/src/pages/RecipeInProgress.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport '../styles/RecipeInProgress.css';\nimport clipboardCopy from 'clipboard-copy';\nimport { requestDrinkById, requestFoodById } from '../helpers/requestAPI';\nimport addFavoriteRecipe from '../helpers/saveFavorites';\nimport saveRecipe from '../helpers/saveDoneRecipe';\nimport shareIcon from '../images/shareIcon.svg';\nimport isFavoritedButton from '../helpers/isFavoriteButton';\nimport { verifyingFavoriteRecipes } from '../helpers/verifyLocalStorage';\nimport '../styles/details.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RecipeInProgress() {\n  _s();\n\n  const history = useHistory();\n  const {\n    location: {\n      pathname\n    }\n  } = history;\n  const pathWithBars = pathname.split('/');\n  const path = pathWithBars[1];\n  const id = pathname.replace(/\\D/g, ''); // Substitui o que não é número por uma string vazia;\n\n  const [requestedFood, setRequestedFood] = useState([]);\n  const [ingredientsFiltreds, setIngredients] = useState([]);\n  const [measureFiltreds, setMeasures] = useState([]);\n  const [checkedCheckboxes, setCheckedBoxs] = useState([]);\n  const [habilitaFinish, setFinish] = useState(true);\n  const [linkCopied, setLinkCopied] = useState(false);\n  const [isFavorited, setIsFavorited] = useState(false);\n\n  const habilitaButton = () => {\n    const array = localStorage.getItem('CheckboxIds');\n    const arrayJsonLength = JSON.parse(array);\n\n    if (arrayJsonLength.length === ingredientsFiltreds.length - 1) {\n      setFinish(false);\n    } else {\n      setFinish(true);\n    }\n  };\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      if (path === 'foods') {\n        const dataFood = await requestFoodById(id);\n        setRequestedFood([dataFood]);\n      }\n\n      if (path === 'drinks') {\n        const dataDrink = await requestDrinkById(id);\n        setRequestedFood([dataDrink]);\n      }\n    };\n\n    fetchAPI();\n    setIsFavorited(verifyingFavoriteRecipes(id));\n    const array = localStorage.getItem('CheckboxIds');\n    const arrayParsed = JSON.parse(array);\n\n    if (arrayParsed !== null && arrayParsed.length > ingredientsFiltreds.length) {\n      localStorage.setItem('CheckboxIds', JSON.stringify([]));\n    }\n\n    if (array === null) {\n      setCheckedBoxs([]);\n    } else if (array !== null) {\n      setCheckedBoxs(arrayParsed);\n    }\n  }, []);\n\n  const getIngredients = async () => {\n    if (requestedFood[0] !== undefined) {\n      const entradas = Object.entries(requestedFood[0]);\n      const ingredients = entradas.filter(e => e[0].includes('strIngredient') && e[1] !== null && e[1].length > 1);\n      const measureIngredie = entradas.filter(e => e[0].includes('strMeasure') && e[1] !== null && e[1].length > 0);\n      const filterIng = ingredients.map(e => e[1]);\n      const filterMeasure = measureIngredie.map(e => e[1]);\n      setIngredients(filterIng);\n      setMeasures(filterMeasure);\n    }\n  };\n\n  const saveOnClipBoard = () => {\n    clipboardCopy(`http://localhost:3000/${path}/${id}`);\n    setLinkCopied(true);\n  };\n\n  const finalizaRecipe = () => {\n    saveRecipe(requestedFood[0], id, path);\n    history.push('/done-recipes');\n  };\n\n  useEffect(() => {\n    getIngredients();\n  }, [requestedFood]);\n\n  const checkboxClick = _ref => {\n    let {\n      target\n    } = _ref;\n    const itens = document.getElementsByName(target.id);\n\n    if (target.checked === true) {\n      itens[0].className = 'cutted';\n\n      if (checkedCheckboxes.includes(target.id)) {\n        const removeBox = checkedCheckboxes.filter(e => e !== target.id);\n        setCheckedBoxs(removeBox);\n      } else {\n        setCheckedBoxs([...checkedCheckboxes, target.id]);\n      }\n    } else if (target.checked === false) {\n      itens[0].className = '';\n      const removeBox = checkedCheckboxes.filter(e => e !== target.id);\n      setCheckedBoxs(removeBox);\n    }\n  };\n\n  const createPage = () => {\n    if (requestedFood[0] !== undefined) {\n      if (path === 'foods') {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"details-image\",\n            \"data-testid\": \"recipe-photo\",\n            src: requestedFood[0].strMealThumb,\n            alt: \"foto da comida\",\n            width: \"300px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            \"data-testid\": \"recipe-title\",\n            children: requestedFood[0].strMeal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            \"data-testid\": \"recipe-category\",\n            children: requestedFood[0].strCategory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: ingredientsFiltreds.map((e, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                \"data-testid\": `${index}-ingredient-step`,\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  \"data-testid\": `${index}-checkbox`,\n                  type: \"checkbox\",\n                  onChange: () => habilitaButton(),\n                  id: index,\n                  onClick: event => checkboxClick(event)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  name: index,\n                  className: \"\",\n                  children: `${measureFiltreds[index]}, ${e}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 21\n              }, this)\n            }, e, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            \"data-testid\": \"instructions\",\n            children: requestedFood[0].strInstructions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), linkCopied === true && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Link copied!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 38\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => saveOnClipBoard(),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: shareIcon,\n              alt: \"share icon\",\n              \"data-testid\": \"share-btn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => {\n              addFavoriteRecipe(requestedFood[0], id, path);\n              setIsFavorited(!isFavorited);\n            },\n            children: isFavoritedButton(isFavorited)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            \"data-testid\": \"finish-recipe-btn\",\n            type: \"button\",\n            disabled: habilitaFinish,\n            onClick: finalizaRecipe,\n            children: \"Finish Recipe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this);\n      }\n\n      if (path === 'drinks') {\n        const verificaAlchool = () => {\n          if (requestedFood[0].strAlcoholic === 'Alcoholic') {\n            return `${requestedFood[0].strCategory}/Alcoholic`;\n          }\n\n          return path;\n        };\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            \"data-testid\": \"recipe-title\",\n            children: requestedFood[0].strDrink\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            \"data-testid\": \"recipe-photo\",\n            src: requestedFood[0].strDrinkThumb,\n            alt: \"foto da bebida\",\n            width: \"300px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            \"data-testid\": \"recipe-category\",\n            children: `categoria: ${verificaAlchool()}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: ingredientsFiltreds.map((e, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              \"data-testid\": `${index}-ingredient-step`,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                \"data-testid\": `${index}-checkbox`,\n                type: \"checkbox\",\n                onChange: () => habilitaButton(),\n                id: index,\n                onClick: event => checkboxClick(event)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                name: index,\n                children: `${measureFiltreds[index]}, ${e}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            \"data-testid\": \"instructions\",\n            children: requestedFood[0].strInstructions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), linkCopied === true && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Link copied!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 38\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => saveOnClipBoard(),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: shareIcon,\n              alt: \"share icon\",\n              \"data-testid\": \"share-btn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => {\n              addFavoriteRecipe(requestedFood[0], id, path);\n              setIsFavorited(!isFavorited);\n            },\n            children: isFavoritedButton(isFavorited)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            \"data-testid\": \"finish-recipe-btn\",\n            type: \"button\",\n            disabled: habilitaFinish,\n            onClick: () => finalizaRecipe(),\n            children: \"Finish Recipe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this);\n      }\n    }\n  };\n\n  useEffect(() => {\n    localStorage.setItem('CheckboxIds', JSON.stringify(checkedCheckboxes));\n  }, [checkedCheckboxes]);\n  useEffect(() => {\n    const checks = localStorage.getItem('CheckboxIds');\n    const arrayJson = JSON.parse(checks);\n    const newArray = arrayJson.length > ingredientsFiltreds.length ? [] : arrayJson;\n    localStorage.setItem('CheckboxIds', JSON.stringify([]));\n\n    if (arrayJson[0] !== undefined || arrayJson[0] !== null) {\n      newArray.forEach(e => {\n        const item = document.getElementById(e);\n        item.setAttribute('checked', true);\n        item.value = 'checked';\n        const itens = document.getElementsByName(e);\n        itens[0].className = 'cutted';\n      });\n    }\n  }, [ingredientsFiltreds]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: createPage()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RecipeInProgress, \"COkPYoqmmY0P2/HGb8EDjexIwUc=\", false, function () {\n  return [useHistory];\n});\n\n_c = RecipeInProgress;\nexport default RecipeInProgress;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeInProgress\");","map":{"version":3,"names":["React","useState","useEffect","useHistory","clipboardCopy","requestDrinkById","requestFoodById","addFavoriteRecipe","saveRecipe","shareIcon","isFavoritedButton","verifyingFavoriteRecipes","RecipeInProgress","history","location","pathname","pathWithBars","split","path","id","replace","requestedFood","setRequestedFood","ingredientsFiltreds","setIngredients","measureFiltreds","setMeasures","checkedCheckboxes","setCheckedBoxs","habilitaFinish","setFinish","linkCopied","setLinkCopied","isFavorited","setIsFavorited","habilitaButton","array","localStorage","getItem","arrayJsonLength","JSON","parse","length","fetchAPI","dataFood","dataDrink","arrayParsed","setItem","stringify","getIngredients","undefined","entradas","Object","entries","ingredients","filter","e","includes","measureIngredie","filterIng","map","filterMeasure","saveOnClipBoard","finalizaRecipe","push","checkboxClick","target","itens","document","getElementsByName","checked","className","removeBox","createPage","strMealThumb","strMeal","strCategory","index","event","strInstructions","verificaAlchool","strAlcoholic","strDrink","strDrinkThumb","checks","arrayJson","newArray","forEach","item","getElementById","setAttribute","value"],"sources":["/home/luan/Trybe/projetos/front-end/sd-022-a-project-recipes-app/src/pages/RecipeInProgress.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport '../styles/RecipeInProgress.css';\nimport clipboardCopy from 'clipboard-copy';\nimport { requestDrinkById, requestFoodById } from '../helpers/requestAPI';\nimport addFavoriteRecipe from '../helpers/saveFavorites';\nimport saveRecipe from '../helpers/saveDoneRecipe';\nimport shareIcon from '../images/shareIcon.svg';\nimport isFavoritedButton from '../helpers/isFavoriteButton';\nimport { verifyingFavoriteRecipes } from '../helpers/verifyLocalStorage';\nimport '../styles/details.css';\n\nfunction RecipeInProgress() {\n  const history = useHistory();\n  const { location: { pathname } } = history;\n  const pathWithBars = pathname.split('/');\n  const path = pathWithBars[1];\n  const id = pathname.replace(/\\D/g, ''); // Substitui o que não é número por uma string vazia;\n  const [requestedFood, setRequestedFood] = useState([]);\n  const [ingredientsFiltreds, setIngredients] = useState([]);\n  const [measureFiltreds, setMeasures] = useState([]);\n  const [checkedCheckboxes, setCheckedBoxs] = useState([]);\n  const [habilitaFinish, setFinish] = useState(true);\n  const [linkCopied, setLinkCopied] = useState(false);\n  const [isFavorited, setIsFavorited] = useState(false);\n  const habilitaButton = () => {\n    const array = localStorage.getItem('CheckboxIds');\n    const arrayJsonLength = JSON.parse(array);\n    if (arrayJsonLength.length === ingredientsFiltreds.length - 1) {\n      setFinish(false);\n    } else {\n      setFinish(true);\n    }\n  };\n  useEffect(() => {\n    const fetchAPI = async () => {\n      if (path === 'foods') {\n        const dataFood = await requestFoodById(id);\n        setRequestedFood([dataFood]);\n      } if (path === 'drinks') {\n        const dataDrink = await requestDrinkById(id);\n        setRequestedFood([dataDrink]);\n      }\n    };\n    fetchAPI();\n    setIsFavorited(verifyingFavoriteRecipes(id));\n    const array = localStorage.getItem('CheckboxIds');\n    const arrayParsed = JSON.parse(array);\n    if (arrayParsed !== null && (arrayParsed.length > ingredientsFiltreds.length)) {\n      localStorage.setItem('CheckboxIds', JSON.stringify([]));\n    } if (array === null) {\n      setCheckedBoxs([]);\n    } else if (array !== null) {\n      setCheckedBoxs(arrayParsed);\n    }\n  }, []);\n  const getIngredients = async () => {\n    if (requestedFood[0] !== undefined) {\n      const entradas = Object.entries(requestedFood[0]);\n      const ingredients = entradas.filter(\n        (e) => e[0].includes('strIngredient') && (e[1] !== null && e[1].length > 1),\n      );\n      const measureIngredie = entradas.filter(\n        (e) => e[0].includes('strMeasure') && (e[1] !== null && e[1].length > 0),\n      );\n      const filterIng = ingredients.map((e) => e[1]);\n      const filterMeasure = measureIngredie.map((e) => e[1]);\n      setIngredients(filterIng);\n      setMeasures(filterMeasure);\n    }\n  };\n  const saveOnClipBoard = () => {\n    clipboardCopy(`http://localhost:3000/${path}/${id}`);\n    setLinkCopied(true);\n  };\n  const finalizaRecipe = () => {\n    saveRecipe(requestedFood[0], id, path);\n    history.push('/done-recipes');\n  };\n  useEffect(() => { getIngredients(); }, [requestedFood]);\n  const checkboxClick = ({ target }) => {\n    const itens = document.getElementsByName(target.id);\n    if (target.checked === true) {\n      itens[0].className = 'cutted';\n      if (checkedCheckboxes.includes(target.id)) {\n        const removeBox = checkedCheckboxes.filter((e) => e !== target.id);\n        setCheckedBoxs(removeBox);\n      } else {\n        setCheckedBoxs([...checkedCheckboxes, target.id]);\n      }\n    } else if (target.checked === false) {\n      itens[0].className = '';\n      const removeBox = checkedCheckboxes.filter((e) => e !== target.id);\n      setCheckedBoxs(removeBox);\n    }\n  };\n  const createPage = () => {\n    if (requestedFood[0] !== undefined) {\n      if (path === 'foods') {\n        return (\n          <div className=\"details-container\">\n            <img\n              className=\"details-image\"\n              data-testid=\"recipe-photo\"\n              src={ requestedFood[0].strMealThumb }\n              alt=\"foto da comida\"\n              width=\"300px\"\n            />\n            <h2 data-testid=\"recipe-title\">{ requestedFood[0].strMeal }</h2>\n            <h4 data-testid=\"recipe-category\">\n              {requestedFood[0].strCategory}\n            </h4>\n            <ul>\n              { ingredientsFiltreds.map(\n                (e, index) => (\n                  <div key={ e }>\n                    <li data-testid={ `${index}-ingredient-step` }>\n                      <input\n                        data-testid={ `${index}-checkbox` }\n                        type=\"checkbox\"\n                        onChange={ () => habilitaButton() }\n                        id={ index }\n                        onClick={ (event) => checkboxClick(event) }\n                      />\n                      <p name={ index } className=\"\">\n                        { `${measureFiltreds[index]}, ${e}`}\n                      </p>\n                    </li>\n                  </div>),\n              ) }\n            </ul>\n            <p data-testid=\"instructions\">{ requestedFood[0].strInstructions }</p>\n            { linkCopied === true && <p>Link copied!</p> }\n            <button\n              type=\"button\"\n              onClick={ () => saveOnClipBoard() }\n            >\n              <img src={ shareIcon } alt=\"share icon\" data-testid=\"share-btn\" />\n            </button>\n            <button\n              type=\"button\"\n              onClick={ () => {\n                addFavoriteRecipe(requestedFood[0], id, path);\n                setIsFavorited(!isFavorited);\n              } }\n            >\n              { isFavoritedButton(isFavorited) }\n            </button>\n            <button\n              data-testid=\"finish-recipe-btn\"\n              type=\"button\"\n              disabled={ habilitaFinish }\n              onClick={ finalizaRecipe }\n            >\n              Finish Recipe\n            </button>\n          </div>\n        );\n      } if (path === 'drinks') {\n        const verificaAlchool = () => {\n          if (requestedFood[0].strAlcoholic === 'Alcoholic') {\n            return `${requestedFood[0].strCategory}/Alcoholic`;\n          }\n          return path;\n        };\n        return (\n          <div>\n            <h2 data-testid=\"recipe-title\">{ requestedFood[0].strDrink }</h2>\n            <img\n              data-testid=\"recipe-photo\"\n              src={ requestedFood[0].strDrinkThumb }\n              alt=\"foto da bebida\"\n              width=\"300px\"\n            />\n            <p data-testid=\"recipe-category\">{`categoria: ${verificaAlchool()}`}</p>\n            <ul>\n              { ingredientsFiltreds.map(\n                (e, index) => (\n                  <li key={ index } data-testid={ `${index}-ingredient-step` }>\n                    <input\n                      data-testid={ `${index}-checkbox` }\n                      type=\"checkbox\"\n                      onChange={ () => habilitaButton() }\n                      id={ index }\n                      onClick={ (event) => checkboxClick(event) }\n                    />\n                    <p name={ index }>\n                      {`${measureFiltreds[index]}, ${e}`}\n                    </p>\n                  </li>\n                ),\n              ) }\n            </ul>\n            <p data-testid=\"instructions\">{requestedFood[0].strInstructions}</p>\n            { linkCopied === true && <p>Link copied!</p> }\n            <button type=\"button\" onClick={ () => saveOnClipBoard() }>\n              <img src={ shareIcon } alt=\"share icon\" data-testid=\"share-btn\" />\n            </button>\n            <button\n              type=\"button\"\n              onClick={ () => {\n                addFavoriteRecipe(requestedFood[0], id, path);\n                setIsFavorited(!isFavorited);\n              } }\n            >\n              { isFavoritedButton(isFavorited) }\n            </button>\n            <button\n              data-testid=\"finish-recipe-btn\"\n              type=\"button\"\n              disabled={ habilitaFinish }\n              onClick={ () => finalizaRecipe() }\n            >\n              Finish Recipe\n            </button>\n          </div>\n        );\n      }\n    }\n  };\n  useEffect(() => {\n    localStorage.setItem('CheckboxIds', JSON.stringify(checkedCheckboxes));\n  }, [checkedCheckboxes]);\n  useEffect(() => {\n    const checks = localStorage.getItem('CheckboxIds');\n    const arrayJson = JSON.parse(checks);\n    const newArray = arrayJson.length > ingredientsFiltreds.length ? [] : arrayJson;\n    localStorage.setItem('CheckboxIds', JSON.stringify([]));\n    if (arrayJson[0] !== undefined || arrayJson[0] !== null) {\n      newArray.forEach((e) => {\n        const item = document.getElementById(e);\n        item.setAttribute('checked', true);\n        item.value = 'checked';\n        const itens = document.getElementsByName(e);\n        itens[0].className = 'cutted';\n      });\n    }\n  }, [ingredientsFiltreds]);\n  return (\n    <div>\n      { createPage() }\n    </div>\n  );\n}\nexport default RecipeInProgress;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}